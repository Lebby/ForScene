==================================== ForScene ====================================

        When you see this tree, know that you've came across ZenCoders.org        


                               with open('ZenCoders.                            
                         `num` in numbers   synchronized                        
                     datetime d      glob.     sys.argv[2] .                    
                  def myclass   `..` @@oscla   org.   .  class {                
               displ  hooks(   public static void   ma    functor:              
             $myclass->method(  impport sys, os.pipe `   @param name`           
           fcl   if(system(cmd) myc. /de   `  $card( array("a"   srand          
         format  lists:  ++:   conc   ++ "my  an   WHERE  for(   == myi         
       `sys:  myvalue(myvalue) sys.t   Console.W  try{    rais     using        
      connec  SELECT * FROM table mycnf acco desc and or selector::clas  at     
     openldap string  sys.   print "zenc der " { 'a':  `ls -l` >  appe &firs    
    import Tkinter    paste( $obh  &a or it myval  bro roll:  :: [] require a   
   case `` super. +y  <svg x="100">  expr    say " %rooms 1  --account fb- yy   
  proc    meth Animate => send(D, open)    putd    EndIf 10  whi   myc`   cont  
 and    main (--) import loop $$ or  end onload  UNION WITH tab   timer 150 *2  
 end. begin True GtkLabel *label    doto partition te   let auto  i<- (i + d ); 
.mushup ``/.  ^/zenc/    myclass->her flv   op             <> element >> 71  or 
QFileDi   :   and  ..    with myc  toA  channel::bo    myc isEmpty a  not  bodt;
class T  public pol    str    mycalc d   pt &&a     *i fc  add               ^ac
::ZenCoders::core::namespac  boost::function st  f = std:   ;;     int    assert
cout << endl   public genera   #include "b ost   ::ac myna const cast<char*> mys
ac  size_t   return ran  int (*getNextValue)(void) ff   double sa_family_t famil
pu        a   do puts("      ac   int main(int argc, char*   "%5d    struct nam
cs               float       for     typedef    enum  puts            getchar() 
if(                        else      #define     fp    FILE* f         char* s 
 i++                                 strcat(           %s                  int 
 31]                                 total+=                               do  
  }do                                while(1)                             sle  
  getc                              strcpy( a                            for   
   prin                            scanf(%d, &                          get    
     int                       void myfunc(int pa                     retu      
       BEQ                   BNEQZ R1 10 ANDI R1 R2                  SYS        
        XOR                SYSCALL 5 SLTIU MFLO 15 SW               JAL         
          BNE            BLTZAL R1 1 LUI 001 NOOP MULTU           SLLV          
            MOV R1     ADD R1 R2  JUMP  10 1001 BEQ R1 R2 1      ANDI            
               1101  1010001100  111 001 01  1010 101100 1001  100              
                 110110 100   0  01 101 01100 100 100 1000100011                
                    11101001001  00   11  100   11  10100010                    
                        000101001001 10  1001   101000101                       
                             010010010010110101001010


For further information:
ZenCoders Website : www.zencoders.org

Author: Scuderi Giovanni Luca ( glscud at gmail dot com ) 

License: All Rights Reserved. This is a temp license. When i'll finish core code, i'll change it in a open license.


ForScene is a library based on PlayN framework.

Disclaimer:
This project is in a "pre-alpha" phase.
Many concept must be simplified and fixed. I want to develop "simply to use" library.
I'm thinking to offer "full-access" to each data in class because I hope to develope a GUI to use this library to offer an easy tool to build demos/games/presentations.
This library is HEAVILY BASED ON PLAYN.
I'll add documentation and refer to playN project and its authors in "documentation" phase.
Now, code is ugly and not documented ... you can read "debug lines and old code" and other things ... please don't care to them! 
If you're of PlayN Projects and you noticed something wrong, you can send email to glscud@gmail.com.   

Purpose:
It's purpose is to offer a layer to easy manage scene and not layer.
Scene is a logical collection of layers and Scene Objects. 
Scene Object is a logical view of multiple Layers.
A Scene Object can be combined to create complex objects.
I'm developing effects that can be have Scene object as target.
I have developed a small event-driven management of scene building process and effect.
   

I want to develop by this library a "Monkey Island"-like game ... then i focus on all I needs to achieve this target!  